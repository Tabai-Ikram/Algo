#include <stdio.h>
#include <stdlib.h>

typedef struct element {
    int val;
    struct element *suivant;
} element;


element* creerListe() {
    return NULL;
}


element* chargerListe(int Tab[], int taille, element* liste) {
    for (int i = 0; i < taille; i++) {
        element* nouveau = (element*)malloc(sizeof(element));
        nouveau->val = Tab[i];
        nouveau->suivant = liste;
        liste = nouveau;
    }
    return liste;
}


void afficherListe(element* liste) {
    if (liste == NULL) {
        printf("La liste est vide\n");
        return;
    }

    while (liste != NULL) {
        printf("%d ", liste->val);
        liste = liste->suivant;
    }
    printf("NULL\n");
}

element* supprimerEnFin(element* liste) {
    if (liste == NULL) {
        return NULL;
    }

    if (liste->suivant == NULL) {
        free(liste);
        return NULL;
    }
    element* temp = liste;       //list=1ere valeur 
    while (temp->suivant->suivant != NULL) {
        temp = temp->suivant;
    }
    free(temp->suivant);
    temp->suivant = NULL;

    return liste;
}

element* ajouterEnDebut(element* liste, int valeur) {
    element* nouveau = (element*)malloc(sizeof(element));
    nouveau->val = valeur;
    nouveau->suivant = liste;        //list=1ere valeur
return nouveau;}
     
     
void viderListe(element* liste) {
    element* x;
    while (liste != NULL) {
        x = liste;
        liste = liste->suivant;
        free(x);
    }
    printf("La liste est vide\n");
}

int main() {
    int Tab[10] = {1, 3, 5, 7, 8, 10, 9, 11, 13, 20};
    element* liste = creerListe();
    printf("\n");
    liste = chargerListe(Tab, 10, liste);
    printf("\n");
    afficherListe(liste);
    printf("\n");
    element* L1 = supprimerEnFin(liste);
    printf("\n");
    afficherListe(L1);
    printf("\n");
    element* L2 = ajouterEnDebut(L1, 40);
    printf("\n");
    afficherListe(L2);
    printf("\n");
    viderListe(L2);

    return 0;
}

